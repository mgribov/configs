# $FreeBSD: src/etc/sysctl.conf,v 1.8.30.1 2008/11/25 02:59:29 kensmith Exp $
#
#  This file is read when going to multi-user and its contents piped thru
#  ``sysctl'' to adjust kernel values.  ``man 5 sysctl.conf'' for details.
#

# Uncomment this to prevent users from seeing information about processes that
# are being run under another UID.
#security.bsd.see_other_uids=0

kern.elf32.fallback_brand=3

# increase max mem for raid5 to 80MB
#kern.geom.raid5.maxmem=80000000

# zabbix gets unhappy otherwise
kern.ipc.shmmax=3272185198
kern.ipc.shmall=16384

net.inet.ip.forwarding=1
net.inet.ip.fastforwarding=1


kern.randompid=348
kern.maxfiles=65535
kern.ipc.nmbclusters=65535
kern.ipc.somaxconn=4096
kern.ipc.maxsockbuf=2097152


# syncookies break dynamic windowing
net.inet.tcp.syncookies=0

# speed up loadlhost connections
net.local.stream.sendspace=1062144
net.local.stream.recvspace=1062144
net.inet.tcp.local_slowstart_flightsize=10
net.inet.tcp.nolocaltimewait=1

# vodoo
net.inet.tcp.inflight.enable=0
net.inet.tcp.inflight.debug=0
net.inet.tcp.inflight.min=6144

# number of packets expected to be in first transmission before ack
net.inet.tcp.slowstart_flightsize=50

# increase max segment size to 1.4k - .2k for headers
net.inet.tcp.mssdflt=1460

# enable random ip_id
net.inet.ip.random_id=1

# ignore ip options - they are useful only to track route back to source of a packet
net.inet.ip.process_options=0

# networking options
net.link.ether.inet.log_arp_wrong_iface=0
net.link.ether.inet.log_arp_movements=0

# increase tcp send and recieve buffers
# a little greater than this and we get no buffer space available error
net.inet.tcp.sendspace=1062144
net.inet.tcp.recvspace=1062144

# automatic buffer sizing, max values
# fbsd 7 specific
net.inet.tcp.sendbuf_max=16777216
net.inet.tcp.recvbuf_max=16777216


# send out source quench
net.inet.ip.sendsourcequench=1

# prevent icmp rst
net.inet.tcp.icmp_may_rst=0

# tcp perfomance extensions - window scaling >65k, dynamic round trip measurment for retransmits,
net.inet.tcp.rfc1323=1

# t/tcp exrtension to speed up transaction-style connections - bypass 3-way handshake, reduce time-wait timer
# not in the kernel no mo!
#net.inet.tcp.rfc1644=1

# increase initial window size to between 2 and 4 segments
net.inet.tcp.rfc3390=1

# enhance tcp loss recovery - good in conjunction with sack - sends more data if get double ack
net.inet.tcp.rfc3042=1

# stops some syn flood attacks, and route cache degradation during a high-bandwidth flood
# from thern.org
net.inet.ip.rtexpire=2
net.inet.ip.rtminexpire=2
net.inet.ip.rtmaxcache=256

# Delay ACK to try and piggyback it onto a data packet
# make sure rfc1323 is on for this too
net.inet.tcp.delayed_ack=1

net.inet.tcp.path_mtu_discovery=1
net.inet.tcp.always_keepalive=1
# increate ip input queue
net.inet.ip.intr_queue_maxlen=1000

net.inet.icmp.drop_redirect=1
net.inet.tcp.blackhole=2
net.inet.udp.blackhole=1
net.inet.ip.forwarding=1
net.inet.ip.redirect=0
net.inet.icmp.log_redirect=1
net.inet6.ip6.redirect=0


kern.maxvnodes=400000
