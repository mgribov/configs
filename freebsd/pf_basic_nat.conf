ext=""
int=""
ext=""
internal=""

# these are defaults but give an idea of whats tweakable
set timeout { interval 10, frag 30 }
set timeout { tcp.first 120, tcp.opening 30, tcp.established 86400 }
set timeout { tcp.closing 900, tcp.finwait 45, tcp.closed 90 }
set timeout { udp.first 60, udp.single 30, udp.multiple 60 }
set timeout { icmp.first 20, icmp.error 10 }
set timeout { other.first 60, other.single 30, other.multiple 60 }
set timeout { adaptive.start 0, adaptive.end 0 }
set limit { states 50000, frags 5000 }
set block-policy drop
set loginterface $ext
set optimization normal
set fingerprints "/etc/pf.os"
set skip on { lo0 }


scrub in all fragment reassemble

table <tarpit> persist file "/etc/tarpit"
table <quickin> const { }
table <quickout> const { }
table <quickblock> const { }

# we do nat for our local network
nat on $ext inet from $int:network to any -> ($ext)

# ftp handling
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"
rdr pass on $int proto tcp to port ftp -> 127.0.0.1 port 8021

# quickly drop all traffic in this table
block quick from <quickblock> to any

# default block
block quick inet6
block quick on $ext from <tarpit> to any
block log on $ext

# dont filter internal network
pass quick on $int no state

# quickly pass in/out traffic in these tables
pass quick on $ext from any to <quickout> keep state
pass quick on $ext from <quickin> to any keep state

# ingress
# if ssh is connected to more than 6 times a minute from same ip, consider it abuse
pass in quick on $ext inet proto tcp from any to ($ext) port 22  flags S/SA modulate state (max-src-conn-rate 6/60, overload <tarpit> flush global)

# egress
# generic safe outbound policy
pass out quick on $ext inet proto tcp from any to any port { 21, 22, 23, 25, 37, 43, 53, 79, 80, 110, 995, 143, 400 >< 500, 993, >1024 } flags S/SA modulate state
pass out quick on $ext inet proto udp from any to any port { 37, 53, 123, 400 >< 500, 500, 517, 518, >1024 } keep state

# icmp control
# pass icmp fragementation needed/unreach/ttl/srcquench exceeded messages
pass in quick inet proto icmp from any to any icmp-type { 3, 4, 11 } keep state

# ping out, sendsrcquench, traceroute out
pass out quick inet proto icmp all icmp-type { echoreq, 4, 30 } keep state

